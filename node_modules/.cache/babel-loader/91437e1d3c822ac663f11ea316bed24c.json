{"ast":null,"code":"import _defineProperty from \"/home/dev/geeta-work/react-todo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/dev/geeta-work/react-todo/src/TodoList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport './index.css';\n\nclass TodoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.addTodo = todo => {\n      this.setState({\n        todos: [todo, ...this.state.todos]\n      });\n    };\n\n    this.toggleComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            //suppose to update\n            return _objectSpread({}, todo, {\n              complete: !todo.complete\n            });\n          } else {\n            return todo;\n          }\n        })\n      });\n    };\n\n    this.handleDelete = id => {\n      this.setState({\n        todos: this.state.todos.filter(todo => todo.id !== id)\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Todo List App\"), React.createElement(\"div\", {\n      className: \"todoForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"todoLeft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Todo Left = \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.todos.filter(todo => !todo.complete).length)), React.createElement(TodoForm, {\n      onSubmit: this.addTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), this.state.todos.map(todo => React.createElement(Todo, {\n      key: todo.id,\n      toggleComplete: () => this.toggleComplete(todo.id),\n      todo: todo,\n      onDelete: () => this.handleDelete(todo.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/home/dev/geeta-work/react-todo/src/TodoList.js"],"names":["React","TodoForm","Todo","TodoList","Component","state","todos","addTodo","todo","setState","toggleComplete","id","map","complete","handleDelete","filter","render","length"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAQ,aAAR;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACJC,MAAAA,KAAK,EAAE;AADH,KAD0B;;AAAA,SAKlCC,OALkC,GAKxBC,IAAI,IAAI;AACd,WAAKC,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAE,CAACE,IAAD,EAAO,GAAG,KAAKH,KAAL,CAAWC,KAArB;AADG,OAAd;AAGH,KATiC;;AAAA,SAWlCI,cAXkC,GAWhBC,EAAD,IAAO;AACpB,WAAKF,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBM,GAAjB,CAAqBJ,IAAI,IAAG;AAC/B,cAAGA,IAAI,CAACG,EAAL,KAAYA,EAAf,EAAkB;AACd;AACA,qCACOH,IADP;AAEIK,cAAAA,QAAQ,EAAE,CAACL,IAAI,CAACK;AAFpB;AAKH,WAPD,MAQI;AACA,mBAAOL,IAAP;AACH;AAIJ,SAfM;AADG,OAAd;AAkBH,KA9BiC;;AAAA,SAgClCM,YAhCkC,GAgCpBH,EAAD,IAAM;AACf,WAAKF,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBS,MAAjB,CACHP,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYA,EADjB;AADG,OAAd;AAKH,KAtCiC;AAAA;;AAwClCK,EAAAA,MAAM,GAAE;AACR,WAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADG,EAEH;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKX,KAAL,CAAWC,KAAX,CAAiBS,MAAjB,CAAwBP,IAAI,IAAE,CAACA,IAAI,CAACK,QAApC,EAA8CI,MAArD,CADZ,CADJ,EAIA,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKV,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,EAKE,KAAKF,KAAL,CAAWC,KAAX,CAAiBM,GAAjB,CAAqBJ,IAAI,IACtB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACG,EAAhB;AACA,MAAA,cAAc,EAAE,MAAK,KAAKD,cAAL,CAAoBF,IAAI,CAACG,EAAzB,CADrB;AAEA,MAAA,IAAI,EAAEH,IAFN;AAGA,MAAA,QAAQ,EAAE,MAAI,KAAKM,YAAL,CAAkBN,IAAI,CAACG,EAAvB,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CALF,CAFG,CAAP;AAmBC;;AA5DiC;;AA+DtC,eAAeR,QAAf","sourcesContent":["import React from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport  './index.css';\n\nclass TodoList extends React.Component{\n    state = {\n        todos: []\n    };\n\n    addTodo = todo => {\n        this.setState({\n            todos: [todo, ...this.state.todos]\n        });\n    };\n\n    toggleComplete = (id) =>{\n        this.setState({\n            todos: this.state.todos.map(todo =>{\n                if(todo.id === id){\n                    //suppose to update\n                    return{\n                        ...todo,\n                        complete: !todo.complete,\n                        \n                    };\n                }\n                else{\n                    return todo;\n                }\n\n                \n                \n            })\n        });\n    };\n\n    handleDelete=(id)=>{\n        this.setState({\n            todos: this.state.todos.filter(\n                todo => todo.id !== id\n            )\n        });\n    };\n\n    render(){\n    return(<div className=\"container\">\n        <h1>Todo List App</h1>\n        <div className=\"todoForm\">\n            <div className = \"todoLeft\">\n            Todo Left = <span>{this.state.todos.filter(todo=>!todo.complete).length}</span>\n        </div>\n        <TodoForm onSubmit={this.addTodo}/>\n         {this.state.todos.map(todo=>(\n             <Todo key={todo.id} \n             toggleComplete={()=> this.toggleComplete(todo.id)}  \n             todo={todo}\n             onDelete={()=>this.handleDelete(todo.id)}/>\n\n         ))}\n         </div>\n\n        \n     </div>\n    )   \n    }\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}